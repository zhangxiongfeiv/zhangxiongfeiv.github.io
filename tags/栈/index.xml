<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>栈 on 飞熊&#39;s Blogs&#39;</title>
    <link>https://zhangxiongfeiv.github.io/tags/%E6%A0%88/</link>
    <description>Recent content in 栈 on 飞熊&#39;s Blogs&#39;</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 26 May 2020 18:21:27 +0800</lastBuildDate>
    
	<atom:link href="https://zhangxiongfeiv.github.io/tags/%E6%A0%88/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>234.回文链表</title>
      <link>https://zhangxiongfeiv.github.io/post/234.%E5%9B%9E%E6%96%87%E9%93%BE%E8%A1%A8/</link>
      <pubDate>Tue, 26 May 2020 18:21:27 +0800</pubDate>
      
      <guid>https://zhangxiongfeiv.github.io/post/234.%E5%9B%9E%E6%96%87%E9%93%BE%E8%A1%A8/</guid>
      <description>234. 回文链表 请判断一个链表是否为回文链表。 示例 1: 输入: 1-&amp;gt;2 输出: false 示例 2: 输入: 1-&amp;gt;2-&amp;gt;2-&amp;gt;1 输出: true 进阶： 你能否用 O(n) 时间复杂度和 O(1) 空间复杂度解决此题？ 来源：</description>
    </item>
    
    <item>
      <title>150. 逆波兰表达式求值</title>
      <link>https://zhangxiongfeiv.github.io/post/150.%E9%80%86%E6%B3%A2%E5%85%B0%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B1%82%E5%80%BC/</link>
      <pubDate>Sat, 11 Apr 2020 11:25:40 +0800</pubDate>
      
      <guid>https://zhangxiongfeiv.github.io/post/150.%E9%80%86%E6%B3%A2%E5%85%B0%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B1%82%E5%80%BC/</guid>
      <description>150. 逆波兰表达式求值 根据逆波兰表示法，求表达式的值。 有效的运算符包括 +, -, *, / 。每个运算对象可以是整数，也可以是另一个逆波兰表达式。 说明： 整数除</description>
    </item>
    
    <item>
      <title>155. 最小栈</title>
      <link>https://zhangxiongfeiv.github.io/post/155.%E6%9C%80%E5%B0%8F%E6%A0%88/</link>
      <pubDate>Sat, 11 Apr 2020 11:25:40 +0800</pubDate>
      
      <guid>https://zhangxiongfeiv.github.io/post/155.%E6%9C%80%E5%B0%8F%E6%A0%88/</guid>
      <description>155. 最小栈 设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。 push(x) —— 将元素 x 推入栈中。 pop() —— 删除栈顶的元素。 top() —— 获取栈顶</description>
    </item>
    
    <item>
      <title>20. 有效的括号</title>
      <link>https://zhangxiongfeiv.github.io/post/20.-%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7/</link>
      <pubDate>Sat, 11 Apr 2020 11:25:40 +0800</pubDate>
      
      <guid>https://zhangxiongfeiv.github.io/post/20.-%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7/</guid>
      <description>栈 栈是一种特殊的线性表,只能在一端操作 往栈中添加元素的操作，一般叫做push，入栈 从栈中移除元素的操作，一般叫做pop，出栈（只能移除栈顶元</description>
    </item>
    
    <item>
      <title>232. 用栈实现队列</title>
      <link>https://zhangxiongfeiv.github.io/post/232.%E7%94%A8%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97/</link>
      <pubDate>Sat, 11 Apr 2020 11:25:40 +0800</pubDate>
      
      <guid>https://zhangxiongfeiv.github.io/post/232.%E7%94%A8%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97/</guid>
      <description>232. 用栈实现队列 使用栈实现队列的下列操作： push(x) &amp;ndash; 将一个元素放入队列的尾部。 pop() &amp;ndash; 从队列首部移除元素。 peek() &amp;ndash; 返回队列首部的元素。 empty() &amp;ndash; 返回队列是否为空。</description>
    </item>
    
  </channel>
</rss>