<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数组 on 飞熊&#39;s Blogs</title>
    <link>https://zhangxiongngfeiv.github.io/tags/%E6%95%B0%E7%BB%84/</link>
    <description>Recent content in 数组 on 飞熊&#39;s Blogs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 28 May 2020 22:55:05 +0800</lastBuildDate>
    
	<atom:link href="https://zhangxiongngfeiv.github.io/tags/%E6%95%B0%E7%BB%84/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>01.08零矩阵</title>
      <link>https://zhangxiongngfeiv.github.io/post/01.08%E9%9B%B6%E7%9F%A9%E9%98%B5/</link>
      <pubDate>Thu, 28 May 2020 22:55:05 +0800</pubDate>
      
      <guid>https://zhangxiongngfeiv.github.io/post/01.08%E9%9B%B6%E7%9F%A9%E9%98%B5/</guid>
      <description>面试题 01.08. 零矩阵 编写一种算法，若M × N矩阵中某个元素为0，则将其所在的行与列清零。 示例 1： 输入： [ [1,1,1], [1,0,1], [1,1,1] ] 输出： [ [1,0,1], [0,0,0], [1,0,1] ] 示例 2： 输入： [ [0,1,2,0], [3,4,5,2],</description>
    </item>
    
    <item>
      <title>10.01合并排序的数组</title>
      <link>https://zhangxiongngfeiv.github.io/post/10.01%E5%90%88%E5%B9%B6%E6%8E%92%E5%BA%8F%E7%9A%84%E6%95%B0%E7%BB%84/</link>
      <pubDate>Tue, 12 May 2020 22:31:36 +0800</pubDate>
      
      <guid>https://zhangxiongngfeiv.github.io/post/10.01%E5%90%88%E5%B9%B6%E6%8E%92%E5%BA%8F%E7%9A%84%E6%95%B0%E7%BB%84/</guid>
      <description>面试题 10.01. 合并排序的数组 给定两个排序后的数组 A 和 B，其中 A 的末端有足够的缓冲空间容纳 B。 编写一个方法，将 B 合并入 A 并排序。 初始化 A 和 B 的元素数</description>
    </item>
    
    <item>
      <title>35. 搜索插入位置</title>
      <link>https://zhangxiongngfeiv.github.io/post/35.-%E6%90%9C%E7%B4%A2%E6%8F%92%E5%85%A5%E4%BD%8D%E7%BD%AE/</link>
      <pubDate>Mon, 10 Feb 2020 11:25:40 +0800</pubDate>
      
      <guid>https://zhangxiongngfeiv.github.io/post/35.-%E6%90%9C%E7%B4%A2%E6%8F%92%E5%85%A5%E4%BD%8D%E7%BD%AE/</guid>
      <description>35. 搜索插入位置 给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。 你可以</description>
    </item>
    
    <item>
      <title>26.删除排序数组中的重复项</title>
      <link>https://zhangxiongngfeiv.github.io/post/26.%E5%88%A0%E9%99%A4%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9/</link>
      <pubDate>Sun, 19 Jan 2020 11:25:40 +0800</pubDate>
      
      <guid>https://zhangxiongngfeiv.github.io/post/26.%E5%88%A0%E9%99%A4%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9/</guid>
      <description>26. 删除排序数组中的重复项](https://leetcode-cn.com/problems/remove-duplicates-from-</description>
    </item>
    
    <item>
      <title>88. 合并两个有序数组</title>
      <link>https://zhangxiongngfeiv.github.io/post/88.%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/</link>
      <pubDate>Sat, 21 Sep 2019 11:25:40 +0800</pubDate>
      
      <guid>https://zhangxiongngfeiv.github.io/post/88.%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/</guid>
      <description>88. 合并两个有序数组 给你两个有序整数数组 nums1 和 nums2，请你将 nums2 合并到 nums1 中，使 nums1 成为一个有序数组。 说明: 初始化 nums1 和 nums2 的元素数量分别为 m 和 n 。 你</description>
    </item>
    
    <item>
      <title>27.移除元素</title>
      <link>https://zhangxiongngfeiv.github.io/post/27.%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0/</link>
      <pubDate>Tue, 03 Sep 2019 11:25:40 +0800</pubDate>
      
      <guid>https://zhangxiongngfeiv.github.io/post/27.%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0/</guid>
      <description>27. 移除元素](https://leetcode-cn.com/problems/remove-element/) 给你一个数组 nums 和一个值 val</description>
    </item>
    
    <item>
      <title>1. 两数之和</title>
      <link>https://zhangxiongngfeiv.github.io/post/1.-%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/</link>
      <pubDate>Sun, 11 Aug 2019 11:25:40 +0800</pubDate>
      
      <guid>https://zhangxiongngfeiv.github.io/post/1.-%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/</guid>
      <description>1. 两数之和 给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。 你可以假设每种输入只会</description>
    </item>
    
    <item>
      <title>11.盛最多水的容器</title>
      <link>https://zhangxiongngfeiv.github.io/post/11.%E7%9B%9B%E6%9C%80%E5%A4%9A%E6%B0%B4%E7%9A%84%E5%AE%B9%E5%99%A8/</link>
      <pubDate>Thu, 11 Jul 2019 11:25:40 +0800</pubDate>
      
      <guid>https://zhangxiongngfeiv.github.io/post/11.%E7%9B%9B%E6%9C%80%E5%A4%9A%E6%B0%B4%E7%9A%84%E5%AE%B9%E5%99%A8/</guid>
      <description>11. 盛最多水的容器](https://leetcode-cn.com/problems/container-with-most-water/)</description>
    </item>
    
  </channel>
</rss>