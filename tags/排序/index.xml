<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>排序 on 飞熊&#39;s Blogs</title>
    <link>https://zhangxiongfgfeiv.github.io/tags/%E6%8E%92%E5%BA%8F/</link>
    <description>Recent content in 排序 on 飞熊&#39;s Blogs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 31 May 2020 17:42:58 +0800</lastBuildDate>
    
	<atom:link href="https://zhangxiongfgfeiv.github.io/tags/%E6%8E%92%E5%BA%8F/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>归并排序</title>
      <link>https://zhangxiongfgfeiv.github.io/post/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Sun, 31 May 2020 17:42:58 +0800</pubDate>
      
      <guid>https://zhangxiongfgfeiv.github.io/post/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/</guid>
      <description>归并排序(merge sort) 于1945年，由冯诺伊曼提出首次提出 执行流程 不断地将数组平均分割成两个子序列, 直到不能再分割为止(只有一个元素) 不断地</description>
    </item>
    
    <item>
      <title>冒泡排序(BubbleSort)</title>
      <link>https://zhangxiongfgfeiv.github.io/post/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Sun, 26 Apr 2020 10:15:13 +0800</pubDate>
      
      <guid>https://zhangxiongfgfeiv.github.io/post/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/</guid>
      <description>冒泡排序(BubbleSort) 执行流程 依次比较两个相邻元素如果前者比后者大，交换两者 一轮比较完毕，则最后一个元素为最大者 再进行第二轮比较，</description>
    </item>
    
    <item>
      <title>堆排序(Heap Sort)</title>
      <link>https://zhangxiongfgfeiv.github.io/post/%E5%A0%86%E6%8E%92%E5%BA%8Fheap-sort/</link>
      <pubDate>Sun, 26 Apr 2020 10:15:13 +0800</pubDate>
      
      <guid>https://zhangxiongfgfeiv.github.io/post/%E5%A0%86%E6%8E%92%E5%BA%8Fheap-sort/</guid>
      <description>堆排序(Heap Sort) 堆排序可以认为是选择排序的一种优化。 选择排序每一轮都在选择最大值 而选择最大值，最优的数据结构是堆 故用堆排序 优化 选择排序 执行</description>
    </item>
    
    <item>
      <title>快速排序(Quick Sort)</title>
      <link>https://zhangxiongfgfeiv.github.io/post/%E5%BF%AB%E6%8E%92/</link>
      <pubDate>Sun, 26 Apr 2020 10:15:13 +0800</pubDate>
      
      <guid>https://zhangxiongfgfeiv.github.io/post/%E5%BF%AB%E6%8E%92/</guid>
      <description>快速排序(Quick Sort) 快速排序(Quick Sort) 1960年由 查尔斯.安东尼.理查德.霍尔提出。 执行流程 随机选择一个为数列的轴点元素 遍历数组，把小</description>
    </item>
    
    <item>
      <title>插入排序(Insertion Sort)</title>
      <link>https://zhangxiongfgfeiv.github.io/post/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8Finsertion-sort/</link>
      <pubDate>Sun, 26 Apr 2020 10:15:13 +0800</pubDate>
      
      <guid>https://zhangxiongfgfeiv.github.io/post/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8Finsertion-sort/</guid>
      <description>插入排序(Insertion Sort) 执行流程 从第一位开始, 依次与之前元素比较 当比之前元素小时, 交换 挨个交换直到 末尾元素 最差时间复杂度 : O(N ^ 2) 平均时</description>
    </item>
    
    <item>
      <title>选择排序(Selection Sort)</title>
      <link>https://zhangxiongfgfeiv.github.io/post/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Sun, 26 Apr 2020 10:15:13 +0800</pubDate>
      
      <guid>https://zhangxiongfgfeiv.github.io/post/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/</guid>
      <description>选择排序(Selection Sort) 执行流程 找出数组中最大的那个元素，和数组末尾元素进行叫魂 执行完一轮后，数组末尾的元素就是最大元素 依次找出剩余元</description>
    </item>
    
  </channel>
</rss>