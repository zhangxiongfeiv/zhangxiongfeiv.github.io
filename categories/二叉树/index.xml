<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>二叉树 on 飞熊&#39;s blogs</title>
    <link>https://zhangxiongfeiv.github.io/categories/%E4%BA%8C%E5%8F%89%E6%A0%91/</link>
    <description>Recent content in 二叉树 on 飞熊&#39;s blogs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 12 May 2020 22:31:36 +0800</lastBuildDate>
    
	<atom:link href="https://zhangxiongfeiv.github.io/categories/%E4%BA%8C%E5%8F%89%E6%A0%91/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>04.02最小高度树</title>
      <link>https://zhangxiongfeiv.github.io/post/04.02%E6%9C%80%E5%B0%8F%E9%AB%98%E5%BA%A6%E6%A0%91/</link>
      <pubDate>Tue, 12 May 2020 22:31:36 +0800</pubDate>
      
      <guid>https://zhangxiongfeiv.github.io/post/04.02%E6%9C%80%E5%B0%8F%E9%AB%98%E5%BA%A6%E6%A0%91/</guid>
      <description>面试题 04.02. 最小高度树 给定一个有序整数数组，元素各不相同且按升序排列，编写一个算法，创建一棵高度最小的二叉搜索树。 示例: 给定有序数组: [-10,-3,0,5,9], 一个可能</description>
    </item>
    
    <item>
      <title>04.05合法二叉搜索树</title>
      <link>https://zhangxiongfeiv.github.io/post/04.05%E5%90%88%E6%B3%95%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/</link>
      <pubDate>Tue, 12 May 2020 22:31:36 +0800</pubDate>
      
      <guid>https://zhangxiongfeiv.github.io/post/04.05%E5%90%88%E6%B3%95%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/</guid>
      <description>面试题 04.05. 合法二叉搜索树 实现一个函数，检查一棵二叉树是否为二叉搜索树。 示例 1: 输入: 2 / 1 3 输出: true 示例 2: 输入: 5 / 1 4 / 3 6 输出: false 解释: 输入</description>
    </item>
    
    <item>
      <title>04.06后继者</title>
      <link>https://zhangxiongfeiv.github.io/post/04.06%E5%90%8E%E7%BB%A7%E8%80%85/</link>
      <pubDate>Tue, 12 May 2020 22:31:36 +0800</pubDate>
      
      <guid>https://zhangxiongfeiv.github.io/post/04.06%E5%90%8E%E7%BB%A7%E8%80%85/</guid>
      <description>面试题 04.06. 后继者 设计一个算法，找出二叉搜索树中指定节点的“下一个”节点（也即中序后继）。 如果指定节点没有对应的“下一个”节点，则返回null。</description>
    </item>
    
    <item>
      <title>04.08首个公共祖先</title>
      <link>https://zhangxiongfeiv.github.io/post/04.08%E9%A6%96%E4%B8%AA%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/</link>
      <pubDate>Tue, 12 May 2020 22:31:36 +0800</pubDate>
      
      <guid>https://zhangxiongfeiv.github.io/post/04.08%E9%A6%96%E4%B8%AA%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/</guid>
      <description>面试题 04.08. 首个共同祖先 设计并实现一个算法，找出二叉树中某两个节点的第一个共同祖先。不得将其他的节点存储在另外的数据结构中。注意：这不一定是二叉</description>
    </item>
    
    <item>
      <title>04.10检查子树</title>
      <link>https://zhangxiongfeiv.github.io/post/04.10%E6%A3%80%E6%9F%A5%E5%AD%90%E6%A0%91/</link>
      <pubDate>Tue, 12 May 2020 22:31:36 +0800</pubDate>
      
      <guid>https://zhangxiongfeiv.github.io/post/04.10%E6%A3%80%E6%9F%A5%E5%AD%90%E6%A0%91/</guid>
      <description>面试题 04.10. 检查子树 检查子树。你有两棵非常大的二叉树：T1，有几万个节点；T2，有几万个节点。设计一个算法，判断 T2 是否为 T1 的子树。 如果 T1 有这么一</description>
    </item>
    
    <item>
      <title>面试题55-1.二叉树的深度</title>
      <link>https://zhangxiongfeiv.github.io/post/55-1.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%B7%B1%E5%BA%A6/</link>
      <pubDate>Tue, 25 Feb 2020 18:25:18 +0800</pubDate>
      
      <guid>https://zhangxiongfeiv.github.io/post/55-1.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%B7%B1%E5%BA%A6/</guid>
      <description>面试题55 - I. 二叉树的深度 输入一棵二叉树的根节点，求该树的深度。从根节点到叶节点依次经过的节点（含根、叶节点）形成树的一条路径，最长路径的长</description>
    </item>
    
    <item>
      <title>17.12.BiNode</title>
      <link>https://zhangxiongfeiv.github.io/post/17.12.binode/</link>
      <pubDate>Sun, 25 Aug 2019 18:25:18 +0800</pubDate>
      
      <guid>https://zhangxiongfeiv.github.io/post/17.12.binode/</guid>
      <description>面试题 17.12. BiNode 二叉树数据结构TreeNode可用来表示单向链表（其中left置空，right为下一个链表节点）。实现一个方法，把二叉搜索树转换为</description>
    </item>
    
  </channel>
</rss>